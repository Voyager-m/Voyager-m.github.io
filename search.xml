<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Leetcode-排序-冒泡排序</title>
      <link href="posts/6299afab/"/>
      <url>posts/6299afab/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>冒泡排序（Bubble Sort）是一种很原始的排序方法，就是通过不断交换“大数”的位置达到排序的目的。因为不断出现“大数”类似于水泡不断出现，因此被形象地称为冒泡算法。</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>从一组数列（列表）中挑选一个最大的数，如果这个数列比较小，有可能我们一眼就看出谁最大，但是如果数列比较大，那么就不好确定了，冒泡排序不需要直接找出数列中最大的那个数，只需要在两个数中找出最大的就可以了。</p><p>冒泡算法的原理是比较两个相邻数字的大小，将两个数中比较大的那个数交换到靠后的位置。这样不断交换下去就可以将最大的那个数放到最后的位置，然后从头开始将第二大的数放到倒数第二的位置上，如此反复，知道将数列变成有序数列。</p><p>举例：</p><pre><code>7 3 5 1 9 4</code></pre><h3 id="1-第一轮排序"><a href="#1-第一轮排序" class="headerlink" title="1.第一轮排序"></a>1.第一轮排序</h3><p>第1次排序，按照冒泡排序的原理，比较相邻两个数的大小，从数列头开始第一次比较7和3的大小，7比3大，交换7和3的位置，把7放在靠后的位置。交换的代码为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> iList[i]&gt;=iList[i+<span class="number">1</span>]</span><br><span class="line">     iList[i],iList[i+<span class="number">1</span>]=iList[i+<span class="number">1</span>],iList[i]</span><br><span class="line"> <span class="comment">#这里你可能会疑惑为什么iList[1]被覆盖了，还能给iList[i+1]赋值，这里为python的序列解包，相关语法可查python官方文档。</span></span><br></pre></td></tr></table></figure><p>交换后如图所示</p><pre><code>3 7 5 1 9 4</code></pre><p>第2次比较7和5的大小，发现7比5大，交换7和5的位置，结果如图：</p><pre><code>3 5 7 1 9 4</code></pre><p>第3次比较7和1的大小，7比1大，交换位置，结果如图：</p><pre><code>3 5 1 7 9 4</code></pre><p>第4次比较7和9的大小，7比9小，不交换位置，结果如图：</p><pre><code>3 5 1 7 9 4</code></pre><p>第5次比较9和4的位置，9比4大，交换位置，结果如下：</p><pre><code>3 5 1 7 4 9</code></pre><p>到此，第一轮排序已经结束，成功序列中最大的值9放入最后的位置。然后再进行下一轮排序。</p><h3 id="2-第二轮排序"><a href="#2-第二轮排序" class="headerlink" title="2.第二轮排序"></a>2.第二轮排序</h3><pre><code>第一次  3 5 1 7 4 9第二次  3 1 5 7 4 9第三次  3 1 5 7 4 9第四次  3 1 5 4 7 9</code></pre><h3 id="3-第三轮排序"><a href="#3-第三轮排序" class="headerlink" title="3.第三轮排序"></a>3.第三轮排序</h3><pre><code>第一次  1 3 5 4 7 9第二次  1 3 5 4 7 9第三次  1 3 4 5 7 9</code></pre><h3 id="4-第四轮排序"><a href="#4-第四轮排序" class="headerlink" title="4.第四轮排序"></a>4.第四轮排序</h3><pre><code>第一次  1 3 4 5 7 9第二次  1 3 4 5 7 9</code></pre><h3 id="5-第五轮排序"><a href="#5-第五轮排序" class="headerlink" title="5.第五轮排序"></a>5.第五轮排序</h3><pre><code>第一次  1 3 4 5 7 9</code></pre><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p>建立无序序列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#实现创建一个无序的数组,名字为randomList</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">randomList</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;返回一个长度为n的整数列表，数据范围[0,1000]&#x27;&#x27;&#x27;</span></span><br><span class="line">    iList = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">        iList.append(random.randrange(<span class="number">1000</span>))</span><br><span class="line">    <span class="keyword">return</span> iList</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    iList=randomList(<span class="number">10</span>)</span><br><span class="line">    print(iList)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>对无序序列进行冒泡排序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> randomList <span class="keyword">import</span> randomList</span><br><span class="line"><span class="keyword">import</span> timeit</span><br><span class="line"></span><br><span class="line">iList = randomList(<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bubbleSort</span>(<span class="params">iList</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;冒泡排序&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> len(iList) &lt;= <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> iList</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, len(iList)):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>, len(iList) - <span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> iList[j] &gt;= iList[j + <span class="number">1</span>]:  <span class="comment"># 比较相邻两数的大小</span></span><br><span class="line">                iList[j], iList[j + <span class="number">1</span>] = iList[j + <span class="number">1</span>], iList[j]  <span class="comment"># 将较大的数交换到靠后的位置</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> iList</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    print(iList)</span><br><span class="line">    print(bubbleSort(iList))</span><br><span class="line">    print(timeit.timeit(<span class="string">&quot;bubbleSort(iList)&quot;</span>,<span class="string">&quot;from __main__ import bubbleSort,iList&quot;</span>,number=<span class="number">100</span>))<span class="comment">#用bubbleSort函数排序100遍用的时长</span></span><br></pre></td></tr></table></figure><p>整理于2020年10月13日早</p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电力大数据技术框架整理</title>
      <link href="posts/8a1e23b3/"/>
      <url>posts/8a1e23b3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p> 随着社会现代化不断推进，出先了很多例如大数据和人工智能等新型技术，这些技术正在为越来越多的行业赋能。电力在我们生活中可以说是处处不在，为了提供更加便捷智能的服务，电力行业也出现了许多需要解决的问题。那么互联网技术如何为电网赋能呢？电网这个庞大的体系中的各个分支都可以和哪些技术呢结合呢？作为一项研究课题，我们可以从哪些切入点开始呢？下面是我通过几天的学习给出的自己的答案。</p><p><img src="https://voyager-m.gitee.io/picgo/powerBigDataPic/electricBigData.png" alt="电力技术框架"></p><p> 这份框架图已经总结的很详细，这里就不再赘述。个人认为从研究切入点来说可以分为以下几点。</p><h2 id="一．研究现有方法，从技术层面为研究切入点"><a href="#一．研究现有方法，从技术层面为研究切入点" class="headerlink" title="一．研究现有方法，从技术层面为研究切入点"></a>一．研究现有方法，从技术层面为研究切入点</h2><h3 id="以上电力大数据的简单框架，其中有些分类还可以再次细分，其中大部概念都属于“现有方法”，但是每一个现有方法放在智慧电网领域具体分析的时候，往往需要对现有方法进行某些改动，以达到得到更好效果的目的，我认为这是一个创新方向。综上所述，我认为以上每个分支，甚至还未列出的更加细的分支，都可以作为一个研究点。"><a href="#以上电力大数据的简单框架，其中有些分类还可以再次细分，其中大部概念都属于“现有方法”，但是每一个现有方法放在智慧电网领域具体分析的时候，往往需要对现有方法进行某些改动，以达到得到更好效果的目的，我认为这是一个创新方向。综上所述，我认为以上每个分支，甚至还未列出的更加细的分支，都可以作为一个研究点。" class="headerlink" title="以上电力大数据的简单框架，其中有些分类还可以再次细分，其中大部概念都属于“现有方法”，但是每一个现有方法放在智慧电网领域具体分析的时候，往往需要对现有方法进行某些改动，以达到得到更好效果的目的，我认为这是一个创新方向。综上所述，我认为以上每个分支，甚至还未列出的更加细的分支，都可以作为一个研究点。"></a>以上电力大数据的简单框架，其中有些分类还可以再次细分，其中大部概念都属于“现有方法”，但是每一个现有方法放在智慧电网领域具体分析的时候，往往需要对现有方法进行某些改动，以达到得到更好效果的目的，我认为这是一个创新方向。综上所述，我认为以上每个分支，甚至还未列出的更加细的分支，都可以作为一个研究点。</h3><h2 id="二、寻找新的方法，从数据问题为研究切入点"><a href="#二、寻找新的方法，从数据问题为研究切入点" class="headerlink" title="二、寻找新的方法，从数据问题为研究切入点"></a>二、寻找新的方法，从数据问题为研究切入点</h2><h3 id="现状：电力工业化加深，电力业务与电力信息融合不断加深，使得电力业务场景越来越具备大数据场景的特征，为了衍生出更多的增值服务，电力与大数据的融合将会不断加深。"><a href="#现状：电力工业化加深，电力业务与电力信息融合不断加深，使得电力业务场景越来越具备大数据场景的特征，为了衍生出更多的增值服务，电力与大数据的融合将会不断加深。" class="headerlink" title="现状：电力工业化加深，电力业务与电力信息融合不断加深，使得电力业务场景越来越具备大数据场景的特征，为了衍生出更多的增值服务，电力与大数据的融合将会不断加深。"></a>现状：电力工业化加深，电力业务与电力信息融合不断加深，使得电力业务场景越来越具备大数据场景的特征，为了衍生出更多的增值服务，电力与大数据的融合将会不断加深。</h3><h3 id="伴随云计算，人工智能等先进互联网技术的发展，数据的“含金量”不断提高，电力行业对数据的管理，存储，共享，操作等有了更高的要求，我国电力大数据环境正在形成，那么电力大数据业务处理、适应电力大数据的技术理论方法等一系列问题，需要通过研究拿出较好的解决方案。"><a href="#伴随云计算，人工智能等先进互联网技术的发展，数据的“含金量”不断提高，电力行业对数据的管理，存储，共享，操作等有了更高的要求，我国电力大数据环境正在形成，那么电力大数据业务处理、适应电力大数据的技术理论方法等一系列问题，需要通过研究拿出较好的解决方案。" class="headerlink" title="伴随云计算，人工智能等先进互联网技术的发展，数据的“含金量”不断提高，电力行业对数据的管理，存储，共享，操作等有了更高的要求，我国电力大数据环境正在形成，那么电力大数据业务处理、适应电力大数据的技术理论方法等一系列问题，需要通过研究拿出较好的解决方案。"></a>伴随云计算，人工智能等先进互联网技术的发展，数据的“含金量”不断提高，电力行业对数据的管理，存储，共享，操作等有了更高的要求，我国电力大数据环境正在形成，那么电力大数据业务处理、适应电力大数据的技术理论方法等一系列问题，需要通过研究拿出较好的解决方案。</h3><h3 id="面临的一些问题："><a href="#面临的一些问题：" class="headerlink" title="面临的一些问题："></a>面临的一些问题：</h3><h3 id="（1）数据质量不是很高。电力数据在数据可获取颗粒程度、及时性、完整性、一致性、数据源的唯一性、准确性上有待提高。"><a href="#（1）数据质量不是很高。电力数据在数据可获取颗粒程度、及时性、完整性、一致性、数据源的唯一性、准确性上有待提高。" class="headerlink" title="（1）数据质量不是很高。电力数据在数据可获取颗粒程度、及时性、完整性、一致性、数据源的唯一性、准确性上有待提高。"></a>（1）数据质量不是很高。电力数据在数据可获取颗粒程度、及时性、完整性、一致性、数据源的唯一性、准确性上有待提高。</h3><h3 id="（2）数据共享以及数据集成不够。目前整个电力行业缺乏整个行业层面的数据模型定义与主数据管理，各个单位的数据管理平台不一，数据共享程度严重不足。"><a href="#（2）数据共享以及数据集成不够。目前整个电力行业缺乏整个行业层面的数据模型定义与主数据管理，各个单位的数据管理平台不一，数据共享程度严重不足。" class="headerlink" title="（2）数据共享以及数据集成不够。目前整个电力行业缺乏整个行业层面的数据模型定义与主数据管理，各个单位的数据管理平台不一，数据共享程度严重不足。"></a>（2）数据共享以及数据集成不够。目前整个电力行业缺乏整个行业层面的数据模型定义与主数据管理，各个单位的数据管理平台不一，数据共享程度严重不足。</h3><h3 id="（3）安全问题。电力数据实际上涉及到用户的隐私，若安全问题处理不好的话，会带来很多问题。另外由于我国面积广阔，电力覆盖面非常广，所以电力单位较多，每个电力单位的信息防御能力差距较大，甚至有些偏远地区的单位防御系统尚未建立。所以整个行业的防御能力需要提高"><a href="#（3）安全问题。电力数据实际上涉及到用户的隐私，若安全问题处理不好的话，会带来很多问题。另外由于我国面积广阔，电力覆盖面非常广，所以电力单位较多，每个电力单位的信息防御能力差距较大，甚至有些偏远地区的单位防御系统尚未建立。所以整个行业的防御能力需要提高" class="headerlink" title="（3）安全问题。电力数据实际上涉及到用户的隐私，若安全问题处理不好的话，会带来很多问题。另外由于我国面积广阔，电力覆盖面非常广，所以电力单位较多，每个电力单位的信息防御能力差距较大，甚至有些偏远地区的单位防御系统尚未建立。所以整个行业的防御能力需要提高"></a>（3）安全问题。电力数据实际上涉及到用户的隐私，若安全问题处理不好的话，会带来很多问题。另外由于我国面积广阔，电力覆盖面非常广，所以电力单位较多，每个电力单位的信息防御能力差距较大，甚至有些偏远地区的单位防御系统尚未建立。所以整个行业的防御能力需要提高</h3><h3 id="（4）数据存储和实时分析。电是每家每户都会用到的资源，每时每刻都有大量的电力被消耗，这就意味这每时每刻都有巨量的电力数据产生，如何对如此大规模的数据进行存储以及实时对其中高质量的数据进行分析是一个需要解决的问题。"><a href="#（4）数据存储和实时分析。电是每家每户都会用到的资源，每时每刻都有大量的电力被消耗，这就意味这每时每刻都有巨量的电力数据产生，如何对如此大规模的数据进行存储以及实时对其中高质量的数据进行分析是一个需要解决的问题。" class="headerlink" title="（4）数据存储和实时分析。电是每家每户都会用到的资源，每时每刻都有大量的电力被消耗，这就意味这每时每刻都有巨量的电力数据产生，如何对如此大规模的数据进行存储以及实时对其中高质量的数据进行分析是一个需要解决的问题。"></a>（4）数据存储和实时分析。电是每家每户都会用到的资源，每时每刻都有大量的电力被消耗，这就意味这每时每刻都有巨量的电力数据产生，如何对如此大规模的数据进行存储以及实时对其中高质量的数据进行分析是一个需要解决的问题。</h3><h2 id="三、探索新方案，从具体问题为研究切入点"><a href="#三、探索新方案，从具体问题为研究切入点" class="headerlink" title="三、探索新方案，从具体问题为研究切入点"></a>三、探索新方案，从具体问题为研究切入点</h2><h3 id="电力系统的各大板块（发电、售电、配电、输电）中都存在一些可以用偏软件的方法进行解决的问题。可以以这些具体问题作为点，去探索解决方案。不过个人认为，这种研究要以个人本身有一定知识技术积累为前提，否则应该较困难。"><a href="#电力系统的各大板块（发电、售电、配电、输电）中都存在一些可以用偏软件的方法进行解决的问题。可以以这些具体问题作为点，去探索解决方案。不过个人认为，这种研究要以个人本身有一定知识技术积累为前提，否则应该较困难。" class="headerlink" title="电力系统的各大板块（发电、售电、配电、输电）中都存在一些可以用偏软件的方法进行解决的问题。可以以这些具体问题作为点，去探索解决方案。不过个人认为，这种研究要以个人本身有一定知识技术积累为前提，否则应该较困难。"></a>电力系统的各大板块（发电、售电、配电、输电）中都存在一些可以用偏软件的方法进行解决的问题。可以以这些具体问题作为点，去探索解决方案。不过个人认为，这种研究要以个人本身有一定知识技术积累为前提，否则应该较困难。</h3><div class="note success simple"><p>以上为仅为作者个人观点。</p></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 智慧电网 </tag>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何将本地项目上传gitee/github</title>
      <link href="posts/c37fef3/"/>
      <url>posts/c37fef3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="在gitee-github上创建一个空的仓库（假如为demo）"><a href="#在gitee-github上创建一个空的仓库（假如为demo）" class="headerlink" title="在gitee/github上创建一个空的仓库（假如为demo）"></a>在gitee/github上创建一个空的仓库（假如为demo）</h3><h3 id="在本地新建一个空文件夹（假如叫gitee）"><a href="#在本地新建一个空文件夹（假如叫gitee）" class="headerlink" title="在本地新建一个空文件夹（假如叫gitee）"></a>在本地新建一个空文件夹（假如叫gitee）</h3><h3 id="在demo文件夹下执行指令"><a href="#在demo文件夹下执行指令" class="headerlink" title="在demo文件夹下执行指令"></a>在demo文件夹下执行指令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone 你的https仓库地址</span><br></pre></td></tr></table></figure><h3 id="在gitee文件夹下面执行指令"><a href="#在gitee文件夹下面执行指令" class="headerlink" title="在gitee文件夹下面执行指令"></a>在gitee文件夹下面执行指令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init </span><br></pre></td></tr></table></figure><h3 id="将需要上传的项目复制到仓库demo文件夹下"><a href="#将需要上传的项目复制到仓库demo文件夹下" class="headerlink" title="将需要上传的项目复制到仓库demo文件夹下"></a>将需要上传的项目复制到仓库demo文件夹下</h3><h3 id="在demo文件夹下执行指令-1"><a href="#在demo文件夹下执行指令-1" class="headerlink" title="在demo文件夹下执行指令"></a>在demo文件夹下执行指令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commt -m &#x27;这里随便写&#x27;</span><br><span class="line">git push </span><br></pre></td></tr></table></figure><h3 id="这里的add-中的-的意思是本文件夹下面的全部文件"><a href="#这里的add-中的-的意思是本文件夹下面的全部文件" class="headerlink" title="这里的add .中的.的意思是本文件夹下面的全部文件"></a>这里的add .中的.的意思是本文件夹下面的全部文件</h3>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitee </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将Hexo从一台电脑转移至另一台电脑</title>
      <link href="posts/a17e1e97/"/>
      <url>posts/a17e1e97/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="前几天利用Hexo搭建了自己的博客系统，整个搭建的过程并不复杂，但是要将自己的博客的漂亮对于一个新手来说还是比较耗时间的，它要求对配置文件里面的关键字比较熟悉，那么如何熟悉这些关键字呢？答案是：看文档！"><a href="#前几天利用Hexo搭建了自己的博客系统，整个搭建的过程并不复杂，但是要将自己的博客的漂亮对于一个新手来说还是比较耗时间的，它要求对配置文件里面的关键字比较熟悉，那么如何熟悉这些关键字呢？答案是：看文档！" class="headerlink" title="前几天利用Hexo搭建了自己的博客系统，整个搭建的过程并不复杂，但是要将自己的博客的漂亮对于一个新手来说还是比较耗时间的，它要求对配置文件里面的关键字比较熟悉，那么如何熟悉这些关键字呢？答案是：看文档！"></a>前几天利用Hexo搭建了自己的博客系统，整个搭建的过程并不复杂，但是要将自己的博客的漂亮对于一个新手来说还是比较耗时间的，它要求对配置文件里面的关键字比较熟悉，那么如何熟悉这些关键字呢？答案是：看文档！</h3><h3 id="既然我们将自己的博客“打扮”成我们喜欢的模样花了这么久，那么是不是就是说我们每次重装系统或者更换了电脑后都需要重新配置呢？当然不是。今天我解决了如何将Hexo博客系统完美迁移至另一台电脑上。写此文章，记录一下："><a href="#既然我们将自己的博客“打扮”成我们喜欢的模样花了这么久，那么是不是就是说我们每次重装系统或者更换了电脑后都需要重新配置呢？当然不是。今天我解决了如何将Hexo博客系统完美迁移至另一台电脑上。写此文章，记录一下：" class="headerlink" title="既然我们将自己的博客“打扮”成我们喜欢的模样花了这么久，那么是不是就是说我们每次重装系统或者更换了电脑后都需要重新配置呢？当然不是。今天我解决了如何将Hexo博客系统完美迁移至另一台电脑上。写此文章，记录一下："></a>既然我们将自己的博客“打扮”成我们喜欢的模样花了这么久，那么是不是就是说我们每次重装系统或者更换了电脑后都需要重新配置呢？当然不是。今天我解决了如何将Hexo博客系统完美迁移至另一台电脑上。写此文章，记录一下：</h3><h2 id="第一步：将旧电脑的文件拷贝在新电脑上"><a href="#第一步：将旧电脑的文件拷贝在新电脑上" class="headerlink" title="第一步：将旧电脑的文件拷贝在新电脑上"></a>第一步：将旧电脑的文件拷贝在新电脑上</h2><h3 id="比如我在我的c盘建立了一个文件夹为Hexo用来存放我的博客系统"><a href="#比如我在我的c盘建立了一个文件夹为Hexo用来存放我的博客系统" class="headerlink" title="比如我在我的c盘建立了一个文件夹为Hexo用来存放我的博客系统"></a>比如我在我的c盘建立了一个文件夹为Hexo用来存放我的博客系统</h3><p><img src="https://s1.ax1x.com/2020/09/28/0EyqtU.png" alt="创建文件夹"></p><h3 id="将原来电脑上的blog和globle拷贝到Hexo文件夹下面"><a href="#将原来电脑上的blog和globle拷贝到Hexo文件夹下面" class="headerlink" title="将原来电脑上的blog和globle拷贝到Hexo文件夹下面"></a>将原来电脑上的blog和globle拷贝到Hexo文件夹下面</h3><h3 id="建立Git和node两个空文件夹用来安装Gitbash和Node"><a href="#建立Git和node两个空文件夹用来安装Gitbash和Node" class="headerlink" title="建立Git和node两个空文件夹用来安装Gitbash和Node"></a>建立Git和node两个空文件夹用来安装Gitbash和Node</h3><h2 id="第二步：在新电脑上安装Git-Bash和Node"><a href="#第二步：在新电脑上安装Git-Bash和Node" class="headerlink" title="第二步：在新电脑上安装Git Bash和Node"></a>第二步：在新电脑上安装Git Bash和Node</h2><h3 id="Git-Bash-的下载地址"><a href="#Git-Bash-的下载地址" class="headerlink" title="Git Bash 的下载地址"></a><a href="https://www.git-scm.com/download/win">Git Bash 的下载地址</a></h3><h3 id="Node-的下载地址"><a href="#Node-的下载地址" class="headerlink" title="Node 的下载地址"></a><a href="https://nodejs.org/en/">Node 的下载地址</a></h3><h3 id="这两个软件在安装的时候将安装位置改为步骤一我们建立的文件夹"><a href="#这两个软件在安装的时候将安装位置改为步骤一我们建立的文件夹" class="headerlink" title="这两个软件在安装的时候将安装位置改为步骤一我们建立的文件夹"></a>这两个软件在安装的时候将安装位置改为步骤一我们建立的文件夹</h3><h3 id="然后全程无脑下一步安装就行了"><a href="#然后全程无脑下一步安装就行了" class="headerlink" title="然后全程无脑下一步安装就行了"></a>然后全程无脑下一步安装就行了</h3><div class="note danger simple"><p>这里特别要注意，Node安装的版本要和你原本电脑上安装的Node版本要一样，不然就会出问题的</p></div><h3 id="安装完成后我们打开按win-R-输入cmd打开控制台"><a href="#安装完成后我们打开按win-R-输入cmd打开控制台" class="headerlink" title="安装完成后我们打开按win+R 输入cmd打开控制台"></a>安装完成后我们打开按win+R 输入cmd打开控制台</h3><p><img src="https://s1.ax1x.com/2020/09/28/0E0JjP.png" alt="打开cmd"></p><h3 id="输入以下两个查看版本号的指令查看是否安装成功（显示下图为安装成功）"><a href="#输入以下两个查看版本号的指令查看是否安装成功（显示下图为安装成功）" class="headerlink" title="输入以下两个查看版本号的指令查看是否安装成功（显示下图为安装成功）"></a>输入以下两个查看版本号的指令查看是否安装成功（显示下图为安装成功）</h3><p><img src="https://s1.ax1x.com/2020/09/28/0EsOsI.png" alt="查看gitbash和node版本"></p><h2 id="第三步：环境配置"><a href="#第三步：环境配置" class="headerlink" title="第三步：环境配置"></a>第三步：环境配置</h2><h3 id="首先找到新电脑的Hexo文件下的globle的地址（比如我的是C-Hexo-globle）"><a href="#首先找到新电脑的Hexo文件下的globle的地址（比如我的是C-Hexo-globle）" class="headerlink" title="首先找到新电脑的Hexo文件下的globle的地址（比如我的是C:\Hexo\globle）"></a>首先找到新电脑的Hexo文件下的globle的地址（比如我的是C:\Hexo\globle）</h3><h3 id="启动cmd命令输入下下面的指令："><a href="#启动cmd命令输入下下面的指令：" class="headerlink" title="启动cmd命令输入下下面的指令："></a>启动cmd命令输入下下面的指令：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config set prefix &quot;C:\Hexo\globle&quot;</span><br><span class="line">npm config set cache &quot;C:\Hexo\globle&quot;</span><br></pre></td></tr></table></figure><h3 id="然后打开系统环境变量配置："><a href="#然后打开系统环境变量配置：" class="headerlink" title="然后打开系统环境变量配置："></a>然后打开系统环境变量配置：</h3><h3 id="此电脑右击-gt-属性-gt-高级系统设置-gt-环境变量"><a href="#此电脑右击-gt-属性-gt-高级系统设置-gt-环境变量" class="headerlink" title="此电脑右击-&gt;属性-&gt;高级系统设置-&gt;环境变量"></a>此电脑右击-&gt;属性-&gt;高级系统设置-&gt;环境变量</h3><h3 id="进入如下界面："><a href="#进入如下界面：" class="headerlink" title="进入如下界面："></a>进入如下界面：</h3><p><img src="https://s1.ax1x.com/2020/09/28/0EgB6J.png" alt="环境变量"></p><h3 id="双击path进入如下界面"><a href="#双击path进入如下界面" class="headerlink" title="双击path进入如下界面"></a>双击path进入如下界面</h3><p><img src="https://s1.ax1x.com/2020/09/28/0Eg0l4.png" alt="新建环境变量"></p><h3 id="点击新建然后填写globle的地址，点击确定，完成环境配置"><a href="#点击新建然后填写globle的地址，点击确定，完成环境配置" class="headerlink" title="点击新建然后填写globle的地址，点击确定，完成环境配置"></a>点击新建然后填写globle的地址，点击确定，完成环境配置</h3><h2 id="第四步：测试"><a href="#第四步：测试" class="headerlink" title="第四步：测试"></a>第四步：测试</h2><h3 id="打开cmd，用cd指令进入C-Hexo-blog位置，然后执行如下指令："><a href="#打开cmd，用cd指令进入C-Hexo-blog位置，然后执行如下指令：" class="headerlink" title="打开cmd，用cd指令进入C:\Hexo\blog位置，然后执行如下指令："></a>打开cmd，用cd指令进入C:\Hexo\blog位置，然后执行如下指令：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s </span><br></pre></td></tr></table></figure><h3 id="用浏览器打开http-localhost-4000-得到如下自己的博客首页就说明本地能测试成功"><a href="#用浏览器打开http-localhost-4000-得到如下自己的博客首页就说明本地能测试成功" class="headerlink" title="用浏览器打开http://localhost:4000 得到如下自己的博客首页就说明本地能测试成功"></a>用浏览器打开<a href="http://localhost:4000/">http://localhost:4000</a> 得到如下自己的博客首页就说明本地能测试成功</h3><p><img src="https://s1.ax1x.com/2020/09/28/0ERLQg.png" alt="页面"></p><p>配置ssh：<br>执行以下指令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;your.email@example.com&quot;</span><br></pre></td></tr></table></figure><h3 id="在cmd中执行如下指令"><a href="#在cmd中执行如下指令" class="headerlink" title="在cmd中执行如下指令"></a>在cmd中执行如下指令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d </span><br></pre></td></tr></table></figure><h3 id="在浏览器输入自己的博客地址（比如我的是voyager-m-github-io）-若能打开博客说明博客迁移成功。"><a href="#在浏览器输入自己的博客地址（比如我的是voyager-m-github-io）-若能打开博客说明博客迁移成功。" class="headerlink" title="在浏览器输入自己的博客地址（比如我的是voyager-m.github.io）,若能打开博客说明博客迁移成功。"></a>在浏览器输入自己的博客地址（比如我的是voyager-m.github.io）,若能打开博客说明博客迁移成功。</h3><h3 id="执行以下指令（自己的邮箱）"><a href="#执行以下指令（自己的邮箱）" class="headerlink" title="执行以下指令（自己的邮箱）"></a>执行以下指令（自己的邮箱）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;your.email@example.com&quot;</span><br></pre></td></tr></table></figure><h3 id="然后打开这个文件复制里面内容添加到gitee和github上的ssh上去"><a href="#然后打开这个文件复制里面内容添加到gitee和github上的ssh上去" class="headerlink" title="然后打开这个文件复制里面内容添加到gitee和github上的ssh上去"></a>然后打开这个文件复制里面内容添加到gitee和github上的ssh上去</h3><p><img src="https://s1.ax1x.com/2020/09/28/0VpBmd.png"></p><h3 id="其中gitee和github的用户名和密码放在下图中的位置"><a href="#其中gitee和github的用户名和密码放在下图中的位置" class="headerlink" title="其中gitee和github的用户名和密码放在下图中的位置"></a>其中gitee和github的用户名和密码放在下图中的位置</h3><p><img src="https://s1.ax1x.com/2020/09/28/0VpTkq.png"></p><h4 id="特别感谢："><a href="#特别感谢：" class="headerlink" title="特别感谢："></a>特别感谢：</h4><p><a href="https://space.bilibili.com/393128277/video">博客搭建</a><br><a href="https://dreamer-liuyang.github.io/posts/4c70a442/">搭建文章版</a><br><a href="https://dreamer-liuyang.github.io/posts/d579f5f8/">美化文章版</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>毛维杨的第一篇文章</title>
      <link href="posts/fbf6b9c0/"/>
      <url>posts/fbf6b9c0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="你好呀！在下毛同学"><a href="#你好呀！在下毛同学" class="headerlink" title="你好呀！在下毛同学"></a>你好呀！在下毛同学</h1><h1 id="家穷人丑，一米四九"><a href="#家穷人丑，一米四九" class="headerlink" title="家穷人丑，一米四九"></a>家穷人丑，一米四九</h1><h1 id="小学文化，农村户口"><a href="#小学文化，农村户口" class="headerlink" title="小学文化，农村户口"></a>小学文化，农村户口</h1><h1 id="破屋三间，薄田一亩"><a href="#破屋三间，薄田一亩" class="headerlink" title="破屋三间，薄田一亩"></a>破屋三间，薄田一亩</h1><h1 id="冷锅热灶，钱财没有"><a href="#冷锅热灶，钱财没有" class="headerlink" title="冷锅热灶，钱财没有"></a>冷锅热灶，钱财没有</h1><h1 id="一年四季，苦学编程"><a href="#一年四季，苦学编程" class="headerlink" title="一年四季，苦学编程"></a>一年四季，苦学编程</h1><h1 id="今创博客，写下此篇"><a href="#今创博客，写下此篇" class="headerlink" title="今创博客，写下此篇"></a>今创博客，写下此篇</h1><h1 id="学习路上，伴你身边"><a href="#学习路上，伴你身边" class="headerlink" title="学习路上，伴你身边"></a>学习路上，伴你身边</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">&quot;既来不留良言三句？&quot;</span>)</span><br></pre></td></tr></table></figure><div class="note success simple"><p>文献提示：评论需要填写昵称和邮箱哦！</p></div>]]></content>
      
      
      <categories>
          
          <category> 个人随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序员 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
